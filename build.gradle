plugins {
    id 'java'
    id 'java-library'
    id("xyz.jpenilla.run-paper") version "2.2.0"
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'maven-publish'
}

group = 'com.github'
version = '0.4.1-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.2-R0.1-SNAPSHOT"
    implementation 'org.reflections:reflections:0.10.2'
    api 'com.google.inject:guice:3.0'
}

tasks.named("shadowJar").configure {
    enabled = System.getenv('GITHUB_ACTIONS') != 'true'
}
shadowJar {
    archiveBaseName.set('shadow-jar')
    archiveVersion.set(version)
    archiveClassifier.set('')
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

tasks {
    runServer {
        minecraftVersion("1.20.2")
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

task publishableJar(type: Jar) {
    from sourceSets.main.output
    exclude '**/com/github/spark/examples/**'
    archiveFileName = "spark-${project.version}-dist.jar"
}

publishing {
    repositories {
        maven {
            name = "Github"
            url = uri("https://maven.pkg.github.com/VincentCosta6/spark")
            credentials {
                username = System.getenv("GITHUB_USERNAME")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact(publishableJar) {
                classifier = 'dist'
            }

            artifactId = 'spark'
            pom {
                name = 'Spark'
                description = 'Spark, the framework that allows for rapid prototyping of Bukkit plugins'
                url = 'https://github.com/VincentCosta6/spark'
            }
        }
    }
}
